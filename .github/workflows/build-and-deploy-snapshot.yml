concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
jobs:
  build:
    if: ${{ github.repository == 'spring-projects/spring-graphql' }}
    name: Build and deploy snapshot
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Set up Java
      uses: actions/setup-java@99b8673ff64fbf99d8d325f52d9a5bdedb8483e9
      with:
        distribution: liberica
        java-version: 17
    - continue-on-error: true
      name: Check out code
      uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11
    - continue-on-error: true
      name: Set up Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5
      with:
        cache-read-only: ${{ github.ref != 'refs/heads/main' || !endsWith(github.ref,
          '.x') }}
    - continue-on-error: true
      name: Configure Gradle properties
      run: 'mkdir -p $HOME/.gradle

        echo ''systemProp.user.name=spring-builds+github'' >> $HOME/.gradle/gradle.properties

        echo ''systemProp.org.gradle.internal.launcher.welcomeMessageEnabled=false''
        >> $HOME/.gradle/gradle.properties

        echo ''org.gradle.daemon=false'' >> $HOME/.gradle/gradle.properties

        '
      shell: bash
    - continue-on-error: true
      env:
        CI: 'true'
        GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_SECRET_ACCESS_KEY
          }}
        GRADLE_ENTERPRISE_CACHE_PASSWORD: ${{ secrets.GRADLE_ENTERPRISE_CACHE_PASSWORD
          }}
        GRADLE_ENTERPRISE_CACHE_USERNAME: ${{ secrets.GRADLE_ENTERPRISE_CACHE_USER
          }}
        GRADLE_ENTERPRISE_URL: https://ge.spring.io
      id: build
      name: Build and publish
      run: ./gradlew -PdeploymentRepository=$(pwd)/deployment-repository build publishAllPublicationsToDeploymentRepository
    - continue-on-error: true
      name: Deploy
      uses: spring-io/artifactory-deploy-action@26bbe925a75f4f863e1e529e85be2d0093cac116
      with:
        artifact-properties: '/**/spring-graphql-docs-*.zip::zip.name=spring-graphql,zip.type=docs,zip.deployed=false

          '
        build-name: ${{ format('spring-graphql-{0}', github.ref_name)}}
        folder: deployment-repository
        password: ${{ secrets.ARTIFACTORY_PASSWORD }}
        repository: libs-snapshot-local
        signing-key: ${{ secrets.GPG_PRIVATE_KEY }}
        signing-passphrase: ${{ secrets.GPG_PASSPHRASE }}
        uri: https://repo.spring.io
        username: ${{ secrets.ARTIFACTORY_USERNAME }}
    - continue-on-error: true
      if: always()
      name: Send notification
      uses: ./.github/actions/send-notification
      with:
        build-scan-url: ${{ steps.build.outputs.build-scan-url }}
        run-name: ${{ format('{0} | Linux | Java 17', github.ref_name) }}
        status: ${{ job.status }}
        webhook-url: ${{ secrets.GOOGLE_CHAT_WEBHOOK_URL }}
name: Build and deploy snapshot
on:
  repository_dispatch:
    types: trigger-ga___build-and-deploy-snapshot.yml
